# Databricks notebook source
from pyspark.sql.functions import to_date
from pyspark.sql.functions import col, concat, lit, concat_ws, array

# COMMAND ----------

wo_data = spark.sql("SELECT * FROM  `dev_ml_data`.`complaints_articles`.`work_order_data`")

# COMMAND ----------

wo_data_rika = wo_data.filter(col('device_serial_number').contains('1J'))

# COMMAND ----------

display(wo_data_rika.count())

# COMMAND ----------

# DBTITLE 1,Data processing before vectorization
# Adding column name to each row
columns_to_exclude = ['work_order_name']
columns_to_modify = [col for col in wo_data_rika.columns if col not in columns_to_exclude]

for column in columns_to_modify:
    column_name = column.replace('_', ' ')
    wo_data_rika = wo_data_rika.withColumn(column, concat(lit(column_name + ' '), col(column)))

# Merge all text rows to content column
columns_to_merge = [col for col in wo_data_rika.columns if col != 'work_order_name']
wo_data_rika = wo_data_rika.withColumn('content', concat_ws(' ', *columns_to_merge))
wo_data_rika = wo_data_rika.withColumn('content', concat(lit(' work order '), col('work_order_name'), lit(' '), col('content')))
wo_data_rika = wo_data_rika.select('work_order_name', 'content')

# COMMAND ----------

display(wo_data_rika.limit(2))

# COMMAND ----------

# MAGIC %sql
# MAGIC --Note that we need to enable Change Data Feed on the table to create the index
# MAGIC CREATE TABLE IF NOT EXISTS dev_ml_data.complaints_articles.raw_wo_rika (
# MAGIC   id BIGINT GENERATED BY DEFAULT AS IDENTITY,
# MAGIC   work_order_name STRING,
# MAGIC   content STRING
# MAGIC ) TBLPROPERTIES (delta.enableChangeDataFeed = true); 

# COMMAND ----------

(wo_data_rika
      .write
      .option("mergeSchema", "true")
      .mode('overwrite')
      .saveAsTable('dev_ml_data.complaints_articles.raw_wo_rika'))

# COMMAND ----------

wo_data_rika = spark.sql("SELECT * FROM  `dev_ml_data`.`complaints_articles`.`raw_wo_rika`")

# COMMAND ----------

# MAGIC %sql
# MAGIC CREATE OR REPLACE TABLE dev_ml_data.complaints_articles.raw_wo_rika_limit_good
# MAGIC TBLPROPERTIES (delta.enableChangeDataFeed = true) AS
# MAGIC SELECT
# MAGIC   id,
# MAGIC   work_order_name,   -- Placeholder for the input column
# MAGIC   ai_query(
# MAGIC     'databricks-dbrx-instruct',
# MAGIC     CONCAT('Rewrite the following text in a more human-readable way', content)    -- Placeholder for the prompt and input
# MAGIC   ) AS content_new  -- Placeholder for the output column
# MAGIC FROM dev_ml_data.complaints_articles.raw_wo_rika
# MAGIC LIMIT 1000;
